version: "3.4"

x-app: &default-app
  env_file:
    - ".env"
  stop_grace_period: "3s"
  tty: true
  deploy:
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 3
      window: 120s
  healthcheck:
    interval: 5s
    timeout: 5s
    retries: 20

services:
  frontend:
    <<: *default-app
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    entrypoint: npm run dev
    depends_on:
      - backend
    working_dir: /app/frontend
    ports:
      - ${FRONTEND_CLIENT_PORT_FORWARD}:${FRONTEND_CLIENT_PORT}
    expose:
      - ${FRONTEND_CLIENT_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend:8000"]

  backend:
    <<: *default-app
    build:
      context: ./services/backend
      dockerfile: Dockerfile
      target: dev
    entrypoint: ./fincal serve
    working_dir: /app/backend
    depends_on:
      database:
        condition: service_healthy
    ports:
      - ${BACKEND_CLIENT_PORT_FORWARD}:${BACKEND_CLIENT_PORT}
    expose:
      - ${BACKEND_CLIENT_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000/api/ok"]

  database:
    <<: *default-app
    build:
      context: ./services/database
      dockerfile: Dockerfile
    ports:
      - ${DB_CLIENT_PORT_FORWARD}:${DB_CLIENT_PORT}
    expose:
      - ${DB_CLIENT_PORT}
    command: --init-file /database/sql/fincal_init.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db-data:/var/lib/mysql
      - ./services/database/sql:/database/sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "--host=database", "--user=root", "--password=${MYSQL_ROOT_PASSWORD}"]

volumes:
  db-data:
